name: Angular Project 1 workflow
on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request.
  push:
    branches:
      - main
      - .github/workflows/angular-project-1.yml
      - sonar-project.properties

env:
  NODE_VERSION: 16.19.1

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup node and npm
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        working-directory: angular-project-1
        run: npm install

      - name: test angular element
        working-directory: angular-project-1
        run: npm run test

      - name: update file path for lcov file
        working-directory: angular-project-1
        run: npm run update-lcov-file-path

      - name: update file path for xml file
        working-directory: angular-project-1
        run: npm run update-xml-file-path

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage

  sonarqube:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting.
          fetch-depth: 2

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: coverage

      # Triggering SonarQube analysis as results of it are required by Quality Gate check.
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@v1.0.0
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Optionally you can use the output from the Quality Gate in another step.
      # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
      - name: "Example show SonarQube Quality Gate Status value"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
